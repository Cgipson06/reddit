#This bot was written by /u/GoldenSights for /u/FourMakesTwoUNLESS on behalf of /r/pkmntcgtrades. Uploaded to Git with permission.
import praw
import time
import datetime
import sqlite3

'''USER CONFIGURATION'''

USERNAME = "Clippy_Office_Asst"
#This is the bot's Username. In order to send mail, he must have some amount of Karma.
PASSWORD = ""
#This is the bot's Password. 
USERAGENT = "/r/Excel New User Welcome"

SUBREDDIT = "excel"
#This is the sub or list of subs to scan for new posts. For a single sub, use "sub1". For multiple subreddits, use "sub1+sub2+sub3+..."
MAXPOSTS = 100
#This is how many posts you want to retrieve all at once. PRAW can download 100 at a time.
WAIT = 300
#This is how many seconds you will wait between cycles. The bot is completely inactive during this time.
DELAY = 5
#This is the time limit between a user's posts, IN SECONDS. 1h = 3600 || 12h = 43200 || 24h = 86400 || 144h = 518400

'''All done!'''



WAITS = str(WAIT)
sql = sqlite3.connect('sql.db')
print('Loaded SQL Database')
cur = sql.cursor()
cur.execute('CREATE TABLE IF NOT EXISTS users(name TEXT, lastpost TEXT)')
print('Loaded Users')
cur.execute('CREATE TABLE IF NOT EXISTS oldposts(id TEXT)')
print('Loaded Oldposts')
sql.commit()

r = praw.Reddit(USERAGENT)

Trying = True
while Trying:
	try:
		r.login(USERNAME, PASSWORD)
		print('Successfully logged in')
		Trying = False
	except praw.errors.InvalidUserPass:
		print('Wrong Username or Password')
		quit()
	except Exception as e:
		print("%s" % e)
		time.sleep(5)

def getTime(bool):
	timeNow = datetime.datetime.now(datetime.timezone.utc)
	timeUnix = timeNow.timestamp()
	if bool == False:
		return timeNow
	else:
		return timeUnix

def scan():
	print('Scanning ' + SUBREDDIT)
	subreddit = r.get_subreddit(SUBREDDIT)
	posts = subreddit.get_new(limit=MAXPOSTS)
	for post in posts:
		try:
			pauthor = post.author.name
		except Exception:
			pauthor = '[deleted]'
		pid = post.id
		plink = post.short_link
		ptime = post.created_utc
		cur.execute('SELECT * FROM oldposts WHERE id=?', [pid])
		if not cur.fetchone():
			cur.execute('SELECT * FROM users WHERE name=?', [pauthor])
			if not cur.fetchone():
				print('Found new user: ' + pauthor)
				cur.execute('INSERT INTO users VALUES(?, ?)', (pauthor, pid))
				r.send_message(pauthor, 'Welcome to /r/Excel, I am here to help!','Hi! ' + pauthor + ',\n\n It looks like you are new to posting in /r/Excel.  Did you know we have a few ways to help you recieve better help?\n\n\n How can I help you?\n\n\n[How to Share Your Questions](/r/excel/wiki/sharingquestions)\n\n[Changing Link Flair](/r/excel/wiki/flair)\n\n[ClippyPoints^TM](/r/excel/wiki/clippy)\n\n\n ^This ^message ^is ^auto-generated ^and ^is ^not ^monitored ^on ^a ^regular ^basis, ^replies ^to ^this ^message ^may ^not ^go ^answered.' , captcha=None)
				sql.commit()
				print('\t' + pauthor + ' has been added to the database.')
				time.sleep(5)
				
		sql.commit()

while True:
	try:
		scan()
	except Exception as e:
		print('An error has occured:', e)
	print('Running again in ' + WAITS + ' seconds.\n')
	time.sleep(WAIT)
